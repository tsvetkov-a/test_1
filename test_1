PROCEDURE auto_prd_rec (stg varchar2, ro pls_integer, re pls_integer default null, msr varchar2 default null, vol number default null,
                                                sd date default null, ed date default null, ad date default null,
                                                sd_add pls_integer default null, ed_add pls_integer default null,
                                                rc pls_integer default null, cadd pls_integer default NULL, brigade pls_integer DEFAULT null) IS
c_1 PLS_INTEGER;
c_2 PLS_INTEGER;
BEGIN
    IF cadd IS NOT NULL THEN SELECT id INTO c_1 FROM ref_com_add WHERE id = cadd; END IF;
    IF rc IS NOT NULL THEN SELECT id INTO c_2 FROM ref_com WHERE id = rc; END IF;
    execute immediate 'INSERT INTO ppo_productions (voldate_id, stage, ro_id, re_id, measure, volume, t_date, e_date, a_date, cadd_id, rc_id, brigade) values (:a,:b,:c,:d,:e,:f,:g,:h,:i,:j,:k,:l)' USING
        vd, stg, ro, re, msr, vol,
        CASE WHEN sd IS NOT NULL THEN addworkdays(sd,nvl(sd_add,0)) ELSE NULL END,
        CASE WHEN ed IS NOT NULL THEN ed WHEN sd IS NOT NULL AND ed_add IS NOT NULL THEN addworkdays(sd,ed_add) ELSE NULL END,
        CASE WHEN ad IS NOT NULL THEN ad ELSE NULL END,
        CASE WHEN cadd IS NOT NULL THEN c_1 ELSE NULL END,
        CASE WHEN rc IS NOT NULL THEN c_2 ELSE NULL END,
        CASE WHEN brigade IS NOT NULL THEN ADMIN.N_LIST(brigade) ELSE NULL END;

END;

PROCEDURE auto_prd_rec_ugp (stg varchar2, nid pls_integer, re pls_integer default null, msr varchar2 default null, vol number default null,
                                                sd date default null, ed date default null, ad date default null,
                                                sd_add pls_integer default null, ed_add pls_integer default null,
                                                rc pls_integer default null, cadd pls_integer default NULL, brigade pls_integer DEFAULT null) IS
c_1 PLS_INTEGER;
c_2 PLS_INTEGER;
rd PLS_INTEGER;
ro PLS_INTEGER;
reid pls_integer;
BEGIN
    IF cadd IS NOT NULL THEN SELECT id INTO c_1 FROM ref_com_add WHERE id = cadd; END IF;
    IF rc IS NOT NULL THEN SELECT id INTO c_2 FROM ref_com WHERE id = rc; END IF;
    SELECT executor INTO rd FROM ppo_voldates WHERE (id = vd OR id = (SELECT voldate_id FROM ppo_voldates WHERE id = vd)) AND executor IS NOT NULL;
    SELECT id, nvl(re_id,re) INTO ro, reid FROM ref_operations WHERE stage = stg AND rd_id = rd AND name_id = nid;
    execute immediate 'INSERT INTO ppo_productions (voldate_id, stage, ro_id, re_id, measure, volume, t_date, e_date, a_date, cadd_id, rc_id, brigade) values (:a,:b,:c,:d,:e,:f,:g,:h,:i,:j,:k,:l)' USING
        vd, stg, ro, reid, msr, vol,
        CASE WHEN sd IS NOT NULL THEN addworkdays(sd,nvl(sd_add,0)) ELSE NULL END,
        CASE WHEN ed IS NOT NULL THEN ed WHEN sd IS NOT NULL AND ed_add IS NOT NULL THEN addworkdays(sd,ed_add) ELSE NULL END,
        CASE WHEN ad IS NOT NULL THEN ad ELSE NULL END,
        CASE WHEN cadd IS NOT NULL THEN c_1 ELSE NULL END,
        CASE WHEN rc IS NOT NULL THEN c_2 ELSE NULL END,
        CASE WHEN brigade IS NOT NULL THEN ADMIN.N_LIST(brigade) ELSE NULL END;

END;

PROCEDURE eco_after_duty (vd_in pls_integer) IS
is_sec VARCHAR2(1);
BEGIN
    vd := vd_in;
    for rec1 in (select confident from ppo_orders where id =
        (select ord_id FROM ppo_voldates WHERE id = vd
         UNION ALL
         SELECT ord_id FROM ppo_voldates WHERE id =
         (SELECT voldate_id FROM ppo_voldates WHERE id = vd))) LOOP
         is_sec := nvl(rec1.confident,'N');
    END LOOP;
    auto_prd_rec('ПЭ', 283653, 201637);
    auto_prd_rec('ПЭ', 283654, 201637);
    auto_prd_rec('ПЭ', 283655, 201637);
    auto_prd_rec('ЛЭ', 283656, 227622);
    auto_prd_rec('ЛЭ', 283657, 201759);
    auto_prd_rec('КЭ', 283658, 227622);
    auto_prd_rec('КЭ', 283659, 201759);
    auto_prd_rec('ОЭ', 283660, 227622);
    auto_prd_rec('ОЭ', 283661, 201743);
    if is_sec = 'Y' then
        auto_prd_rec('ОЭ', 283662, 201676);
    else
        auto_prd_rec('ОЭ', 283662, 207173);
    end if;
END;

PROCEDURE eco_before_duty (vd_in pls_integer) IS
BEGIN
    vd := vd_in;
    auto_prd_rec('ПРЭ', 283651, 227622);
    auto_prd_rec('ПРЭ', 283652, 201729);
END;

PROCEDURE eco_after_duty (vd_in pls_integer) IS
is_sec VARCHAR2(1);
BEGIN
    vd := vd_in;
    for rec1 in (select confident from ppo_orders where id =
        (select ord_id FROM ppo_voldates WHERE id = vd
         UNION ALL
         SELECT ord_id FROM ppo_voldates WHERE id =
         (SELECT voldate_id FROM ppo_voldates WHERE id = vd))) LOOP
         is_sec := nvl(rec1.confident,'N');
    END LOOP;
    auto_prd_rec('ПЭ', 283653, 201637);
    auto_prd_rec('ПЭ', 283654, 201637);
    auto_prd_rec('ПЭ', 283655, 201637);
    auto_prd_rec('ЛЭ', 283656, 227622);
    auto_prd_rec('ЛЭ', 283657, 201759);
    auto_prd_rec('КЭ', 283658, 227622);
    auto_prd_rec('КЭ', 283659, 201759);
    auto_prd_rec('ОЭ', 283660, 227622);
    auto_prd_rec('ОЭ', 283661, 201743);
    if is_sec = 'Y' then
        auto_prd_rec('ОЭ', 283662, 201676);
    else
        auto_prd_rec('ОЭ', 283662, 207173);
    end if;
END;

PROCEDURE std_geo_after_duty (vd_in pls_integer) IS
is_sec VARCHAR2(1);
BEGIN
    vd := vd_in;
    for rec1 in (select confident from ppo_orders where id =
        (select ord_id FROM ppo_voldates WHERE id = vd
         UNION ALL
         SELECT ord_id FROM ppo_voldates WHERE id =
         (SELECT voldate_id FROM ppo_voldates WHERE id = vd))) LOOP
         is_sec := nvl(rec1.confident,'N');
    END LOOP;
    auto_prd_rec('ПМ', 272431, 203847);
    auto_prd_rec('ПМ', 272432, 203847);
    auto_prd_rec('ПМ', 272569, 203847);
    auto_prd_rec('ПМ', 272433, 203847);
    auto_prd_rec('П', 272434, 201714);
    auto_prd_rec('П', 272859, 201714);
    auto_prd_rec('П', 272860, 201714);
    auto_prd_rec('П', 272570, 203503);
    auto_prd_rec('ГР', 272555, 201704);
    auto_prd_rec('ГР', 272503, 201704);
    auto_prd_rec('Л', 543998, 225525);
    auto_prd_rec('Л', 543997, 225525);
    auto_prd_rec('Л', 543996, 225525);
    auto_prd_rec('Л', 272439, 225525);
    auto_prd_rec('К', 272442, 201704);
    auto_prd_rec('К', 272440, 206542);
    auto_prd_rec('К', 543991, 201751);
    auto_prd_rec('К', 273116, 201706);
    auto_prd_rec('ОТК', 272443, 1132824);
    auto_prd_rec('ОТК', 272441, 201729);
    if is_sec = 'Y' then
        auto_prd_rec('ОТК', 272444, 201676);
    else
        auto_prd_rec('ОТК', 272444, 207173);
    end if;
END;

PROCEDURE std_geo_before_duty (vd_in pls_integer) IS
BEGIN
    vd := vd_in;
    auto_prd_rec('ПР', 272560, 201676);
    auto_prd_rec('ПР', 272561, 201704);
    auto_prd_rec('ПР', 272562, 206542);
    auto_prd_rec('ПР', 272507, 201729);
END;

