Характеристика задачи:  REQDEV-368 - Автоинформирование при изменениях в АС Договор В РАБОТЕ  для оперативного контроля заказов по ОГХ, необходимо сделать рассылку при появлении даты аннулирования и при изменении даты плана в работе “Создание инженерно-топографического плана М 1:500 для первичной паспортизации.”
Входные данные: в заказе есть работа “Создание инженерно-топографического плана М 1:500 для первичной паспортизации.” (ppo_voldates.kind = 1127)
Выходные данные: сообщение об аннулировании заказа, сообщение об изменении даты плана в работе
Описание алгоритма:
Необходимо сделать два вида рассылок: для УГП №1 и УГП №2

Рассылки для УГП №1: делаем проверку на заказах у которых следующие условия:
есть работа “Создание инженерно-топографического плана М 1:500 для первичной паспортизации” ppo_voldates.kind = '1127' + есть работа у которой ppo_voldates.executor = 1293763

ppo_orders.done_doc_date is null

ppo_orders.no not like '%test%', '%тест%' без учёта регистра.

Письмо уходит следующим сотрудникам УГП1:

Беленко Геннадий Игоревич <gbelenko@mggt.ru>;
Воронова Ольга Алексеевна <ovoronova@mggt.ru>


2. Рассылки для УГП №1: делаем проверку на заказах у которых следующие условия:

есть работа “Создание инженерно-топографического плана М 1:500 для первичной паспортизации” ppo_voldates.kind = '1127' + есть работа у которой ppo_voldates.executor = 1293890

ppo_orders.done_doc_date is null

ppo_orders.no not like '%test%', '%тест%' без учёта регистра.

Письмо уходит следующим сотрудникам УГП2:

Хомяков Павел Викторович <pkhomyakov@mggt.ru>;
Котельников Михаил Вадимович <mkotelnikov@MGGT.RU>;


1ая рассылка: появилась дата аннулирования: при появлении даты аннулирования в таком заказе ppo_orders.cancel_date is not null (update с null на not null), уходит сообщение:

"В заказе ppo_orders.no проставили дату аннулирования ppo_orders.cancel_date"

Наименование рассылок в домене: 

Заказ аннулирован (УГП №1)

Заказ аннулирован (УГП №2)



2ая рассылка: в работе, у которой ppo_voldates.kind = '1127' изменилась дата планового окончания ppo_voldates.e_date (update с not null на новое значение, не равное предыдущему)

"В заказе ppo_orders.no поменялась дата планового окончания на ppo_voldates.e_date (новая дата)"

Наименование рассылок в домене:

Изменение даты плана в заказах ОГХ (УГП №1)

Изменение даты плана в заказах ОГХ (УГП №2)



  procedure test_1(o_id number, o_no varchar2, o_cancel_date date) is
    executor number; -- Объявление переменной executor
begin
  for change in (
    select executor, xmlelement("TABLE", xmlforest(
             xmlforest('{ord_no}' as "TD", o_no as "TD") as "TR"
           , xmlforest('{cancel_date}' as "TD", o_cancel_date as "TD") as "TR"
           )) x
    from ppo_voldates w
    where w.ord_id = o_id and w.kind = '1127'
    --and o.done_doc_date is null
    --and upper(o.no) not like '%test%'
    --and upper(o.no) not like '%тест%'
    --and o.id = o_id
    and rownum = 1
  ) loop
    if executor = 1293763 then
        ref_mail.send('Заказ аннулирован (УГП №1)', change.x);
    elsif executor = 1293890 then
        ref_mail.send('Заказ аннулирован (УГП №2)', change.x);
    end if;
  end loop;      
end test_1;

    procedure test_2(v_id number) is
begin
  for change in (
    select executor, xmlelement("TABLE", xmlforest(
      xmlforest('{ord_no}' as "TD", o.no as "TD") as "TR",
      xmlforest('{e_date}' as "TD", w.e_date as "TD") as "TR"
    )) x
    from ppo_orders o join ppo_voldates w on w.ord_id = o.id
    where w.kind = '1127'
    and upper(o.no) not like '%test%'
    and upper(o.no) not like '%тест%'
    and w.id = v_id
  ) loop
    if change.executor = 1293763 THEN
      ref_mail.send('Изменение даты плана в заказах ОГХ (УГП №1)', change.x);
    elsif change.executor = 1293890 THEN
      ref_mail.send('Изменение даты плана в заказах ОГХ (УГП №2)', change.x);
    end if;
  end loop;
end test_2;


Для cancel_date нужно переписать запрос в ppo_msg – заменить join ppo_voldates на 2 exists, в одном  из которых проверять наличие работы ‘1127’, а в другом ‘executor’.
Для done_doc_date проблематичнее – ppo_voldates не получится обратиться из триггера. 


Обновленная процедура:

procedure test_1(o_id number, o_no varchar2, o_cancel_date date) is
    executor number; -- Объявление переменной executor
begin
  for change in (
    select executor, xmlelement("TABLE", xmlforest(
             xmlforest('{ord_no}' as "TD", o_no as "TD") as "TR"
           , xmlforest('{cancel_date}' as "TD", o_cancel_date as "TD") as "TR"
           )) x
    from ppo_voldates w
    where exists (
      select 1
      from ppo_orders o
      where o.id = w.ord_id
      and o.done_doc_date is null
      and upper(o.no) not like '%test%'
      and upper(o.no) not like '%тест%'
    )
    and exists (
      select 1
      from ppo_voldates v
      where v.ord_id = w.ord_id
      and v.kind = '1127'
      and v.executor in (1293763, 1293890)
    )
    and rownum = 1
  ) loop
    dbms_output.put_line('Processing executor: ' || executor);
    if executor = 129376 then
        dbms_output.put_line('Sending mail to УГП №1');
        ref_mail.send('Заказ аннулирован (УГП №1)', change.x);
    elsif executor = 1293890 then
        dbms_output.put_line('Sending mail to УГП №2');
        ref_mail.send('Заказ аннулирован (УГП №2)', change.x);
    end if;
  end loop;
exception
  when others then
    dbms_output.put_line('Error occurred: ' || SQLCODE || ' : ' || SQLERRM);
end test_1;


_________________________________________________________________________________________________________________________________________===============================================





create or replace trigger pord_msg
after insert or update of ent_id, expertise, duty_date, scheme_date, cancel_date, materials_not_give on ppo_orders
for each row
declare
  cursor c_ent(e_id number) is
    select simulant, nonresident
    , xmlelement("TABLE"
      , xmlelement("TR", xmlforest('{ord_no}' as "TD", :new.no as "TD"))
      , xmlelement("TR", xmlforest('{ent_name}' as "TD", short_name as "TD"))
      , xmlelement("TR", xmlforest('{ent_inn}' as "TD", inn as "TD"))
    ) x
    from ent_entities 
    where id = e_id;
  cnt number;
  x xmltype;
  t_date date := add_months(trunc(sysdate), -1200);
begin
/*####################################################################################################################*/
  if nvl(:old.ent_id, 0) != :new.ent_id then
    for e in c_ent(:new.ent_id) loop
      if e.simulant = 'Y' then ref_mail.send('Заказчик с поддельными документами', e.x); end if;
      if e.nonresident = 'Y' then ref_mail.send('Нерезидент (заказ)', e.x); end if;
    end loop;
  end if;
/*####################################################################################################################*/
  if nvl(:old.expertise,'N') != nvl(:new.expertise,'N') and :new.expertise = 'Y' then
    select xmlelement("TABLE", xmlelement("TR", xmlforest('{ord_no}' as "TD", :new.no as "TD"))) into x from dual;
    ref_mail.send('Заказ для Главгосэкспертизы', x);
  end if;
/*####################################################################################################################*/
  if :old.duty_date is null and :new.duty_date is not null and :new.no like '3/3000-%/%' then
    select xmlelement("TABLE", xmlelement("TR", xmlforest('{ord_no}' as "TD", :new.no as "TD"))) into x from dual;
    ref_mail.send('Подготовка материалов по заказу 3/3000-%', x);
  end if;
/*####################################################################################################################*/
  select count(*) into cnt from ppo_voldates where ord_id=:new.id and executor='200339';
  if :old.duty_date is null and :new.duty_date is not null and :new.no like '3/30001-%/%' and cnt > 0 then
    select xmlelement("TABLE", xmlelement("TR", xmlforest('{ord_no}' as "TD", :new.no as "TD"))) into x from dual;
    ref_mail.send('Подготовка материалов по заказу 3/30001-%', x);
  end if;
/*####################################################################################################################*/
  select count(*) into cnt from ppo_voldates where ord_id = :new.id and category = '16';
  if :old.duty_date is null and :new.duty_date is not null and cnt > 0 then
    select xmlelement("TABLE", xmlelement("TR", xmlforest('{ord_no}' as "TD", :new.no as "TD"))) into x from dual;
    select count(*) into cnt from ppo_voldates where ord_id = :new.id and kind in ('112','427','428','429');
    if cnt = 0 then ref_mail.send('Дублирование красных отметок', x);
    else ref_mail.send('Дублирование красных отметок с поимеющимся', x);
    end if;
  end if;
/*####################################################################################################################*/
  if nvl(trunc(:old.duty_date), sysdate) <> trunc(:new.duty_date) then
   select count(*) into cnt from ref_employees where re_id is null and e_date is null and (in_dept(rd_id,200336)=1 or in_dept(rd_id,200349)=1) and id=:new.creator;
   if cnt>0 then
      select count(*) into cnt from ppo_voldates where executor=200349 and kind!='985' and ord_id=:new.id;
      if cnt>0 then
         select xmlelement("TABLE", xmlelement("TR", xmlforest('{ord_no}' as "TD", :new.no as "TD"))) into x from dual;
         ref_mail.send('Подготовлен наряд (для отдела №5)',x);
      end if;
   end if;
  end if;
/*####################################################################################################################*/
  --Ястребов 20.03.2019 поле scheme_date 
  if :new.scheme_date is not null and nvl(:old.scheme_date, t_date) != :new.scheme_date then
    if :new.kind='вз' and :new.fin_source='гз' and :new.address is not null and :new.ent_id is not null and :new.creator is null then 
       --рассылка сообщения 'ОДиПД - заказ принят (госзадание)'
       ppo_msg.scheme_date(:new.id, :new.no,  nvl(:new.open_date,:old.open_date), nvl(:new.inserted_by,:old.inserted_by), nvl(:new.escr_id,:old.escr_id));
    end if;  
  end if;  
/*####################################################################################################################*/
  if nvl(trunc(:old.cancel_date), sysdate) != trunc(:new.cancel_date) and :new.cancel_date is not null and :old.cancel_date is null then
    ppo_msg.ord_annulment_notification(:new.id, :new.no, :new.inserted_by, :new.escr_id);
    if :new.done_doc_date is null and upper(:new.no) not like '%test%' and upper(:new.no) not like '%тест%' then
      ppo_msg.test_1(:new.id, :new.no, :new.cancel_date);
    end if;
  end if;

/*####################################################################################################################*/
  if nvl(trunc(:old.duty_date), sysdate) != trunc(:new.duty_date) and :new.duty_date is not null then
    select count(*) into cnt from ppo_voldates where ord_id=:new.id and executor=200339;
    if cnt > 0 then
      ppo_msg.dep3_duty(:new.id, :new.no, :new.doc_found, :new.fin_source);
    end if;
    select count(*) into cnt from ppo_voldates where ord_id=:new.id and executor=200347;
    if cnt > 0 then
      ppo_msg.dep10_duty(:new.no, :new.doc_found, :new.fin_source);
    end if;
    select count(*) into cnt from ppo_voldates where ord_id=:new.id and executor=200341;
    if cnt > 0 then
      ppo_msg.dep7_duty(:new.no, :new.doc_found, :new.fin_source);
    end if;
    if :old.duty_date is null then
      ppo_msg.dep4_commercial_duty(:new.no,:new.id,:new.creator);
    end if;
  end if;
/*####################################################################################################################*/
  if :old.materials_not_give='N' AND :new.materials_not_give='Y' or :old.materials_not_give='Y' AND :new.materials_not_give='N' then
    ppo_msg.materials_to_provide(:new.no, :new.materials_not_give);
  end if;  
/*####################################################################################################################*/ 
    
end pord_msg;




===========================================================================================================================
Триггер
70-75 строка:
/*####################################################################################################################*/
if nvl(trunc(:old.cancel_date), sysdate) != trunc(:new.cancel_date) and :new.cancel_date is not null and :old.cancel_date is null then
  ppo_msg.ord_annulment_notification(:new.id, :new.no, :new.inserted_by, :new.escr_id);
  if :new.done_doc_date is null and upper(:new.no) not like '%test%' and upper(:new.no) not like '%тест%' then
    ppo_msg.test_1_updated(:new.id, :new.no, :new.cancel_date); -- Используйте обновленное имя процедуры
  end if;
end if;
/*####################################################################################################################*/
=======================================================================================================================
